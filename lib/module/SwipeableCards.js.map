{"version":3,"sources":["SwipeableCards.tsx"],"names":["React","Animated","ActionTag","interpolateX","useAnimation","SwipeableCards","actionTagDetails","enableTags","props","data","map","item","i","index","currentIndex","position","rotateAndTranslate","interpolateConfig","panHandlers","onSwipe","selectedIndex","direction","itemDefinition","find","onChange","nopeOpacity","labels","left","likeOpacity","right","superLikeOpacity","top","render","opacity","transform","scale","reverse"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,QAAT,QAAyB,cAAzB;AAEA,SAASC,SAAT,QAA0B,aAA1B;AAEA,SAASC,YAAT,EAAuBC,YAAvB,QAA2C,gBAA3C;AAsBA,OAAO,MAAMC,cAAc,GAAG,QAGd;AAAA,MAHiC;AAC/CC,IAAAA,gBAAgB,GAAG;AAAEC,MAAAA,UAAU,EAAE;AAAd,KAD4B;AAE/C,OAAGC;AAF4C,GAGjC;AACd,QAAMC,IAAI,GAAGD,KAAK,CAACC,IAAN,CAAWC,GAAX,CAAe,CAACC,IAAD,EAAOC,CAAP,MAAc,EAAE,GAAGD,IAAL;AAAWE,IAAAA,KAAK,EAAED;AAAlB,GAAd,CAAf,CAAb;AACA,QAAM;AAAEE,IAAAA,YAAF;AAAgBC,IAAAA,QAAhB;AAA0BC,IAAAA,kBAA1B;AAA8CC,IAAAA,iBAA9C;AAAiEC,IAAAA;AAAjE,MACJd,YAAY,CAAC;AACXe,IAAAA,OAAO,EAAE,CAACC,aAAD,EAAgBC,SAAhB,KAA8B;AACrC,YAAMC,cAAc,GAAGb,IAAI,CAACc,IAAL,CAAWX,CAAD,IAAOA,CAAC,CAACC,KAAF,KAAYO,aAA7B,CAAvB;;AACA,UAAIE,cAAJ,EAAoB;AAClBd,QAAAA,KAAK,CAACgB,QAAN,CAAeF,cAAc,CAACX,IAA9B,EAAoCU,SAApC;AACD;AACF;AANU,GAAD,CADd;AAUA,sBACE,0CACGZ,IAAI,CACFC,GADF,CACOY,cAAD,IAAoB;AACvB,QAAIA,cAAc,CAACT,KAAf,GAAuBC,YAA3B,EAAyC;AACvC,aAAO,IAAP;AACD;;AACD,QAAIQ,cAAc,CAACT,KAAf,KAAyBC,YAA7B,EAA2C;AAAA;;AACzC,0BACE,oBAAC,QAAD,CAAU,IAAV,eACMI,WADN;AAEE,QAAA,GAAG,EAAEI,cAAc,CAACT,KAFtB;AAGE,QAAA,KAAK,EAAE,CAACG,kBAAD;AAHT,UAIG,CAAAV,gBAAgB,SAAhB,IAAAA,gBAAgB,WAAhB,YAAAA,gBAAgB,CAAEC,UAAlB,kBACC,uDACE,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAC,MAArB;AAA4B,QAAA,OAAO,EAAEU,iBAAiB,CAACQ;AAAvD,SACG,0BAAAnB,gBAAgB,CAACoB,MAAjB,gFAAyBC,IAAzB,KAAiC,MADpC,CADF,eAIE,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAC,OAArB;AAA6B,QAAA,OAAO,EAAEV,iBAAiB,CAACW;AAAxD,SACG,2BAAAtB,gBAAgB,CAACoB,MAAjB,kFAAyBG,KAAzB,KAAkC,MADrC,CAJF,eAOE,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAC,KAArB;AAA2B,QAAA,OAAO,EAAEZ,iBAAiB,CAACa;AAAtD,SACG,2BAAAxB,gBAAgB,CAACoB,MAAjB,kFAAyBK,GAAzB,KAAgC,YADnC,CAPF,CALJ,EAiBGT,cAAc,CAACU,MAAf,CAAsBV,cAAc,CAACX,IAArC,CAjBH,CADF;AAqBD;;AAED,wBACE,oBAAC,QAAD,CAAU,IAAV;AACE,MAAA,GAAG,EAAEW,cAAc,CAACT,KADtB;AAEE,MAAA,KAAK,EAAE;AACLoB,QAAAA,OAAO,EAAE9B,YAAY,CAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAD,EAAYY,QAAZ,CADhB;AAELmB,QAAAA,SAAS,EAAE,CAAC;AAAEC,UAAAA,KAAK,EAAEhC,YAAY,CAAC,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,CAAD,EAAcY,QAAd;AAArB,SAAD;AAFN;AAFT,OAMGO,cAAc,CAACU,MAAf,CAAsBV,cAAc,CAACX,IAArC,CANH,CADF;AAUD,GAvCF,EAwCEyB,OAxCF,EADH,CADF;AA6CD,CA5DM","sourcesContent":["import React from 'react';\n\nimport { Animated } from 'react-native';\n\nimport { ActionTag } from './ActionTag';\nimport { Direction } from './types';\nimport { interpolateX, useAnimation } from './useAnimation';\n\ninterface ItemDefinition<T> {\n  item: T;\n  render: (item: T) => React.ReactNode;\n}\n\ninterface ActionTagDetails {\n  enableTags: boolean;\n  labels: {\n    left: string;\n    right: string;\n    top: string;\n  };\n}\n\ninterface Props<T extends object> {\n  data: ItemDefinition<T>[];\n  onChange: (item: T, direction: Direction) => void;\n  actionTagDetails?: Partial<ActionTagDetails>;\n}\n\nexport const SwipeableCards = <T extends object>({\n  actionTagDetails = { enableTags: true },\n  ...props\n}: Props<T>) => {\n  const data = props.data.map((item, i) => ({ ...item, index: i }));\n  const { currentIndex, position, rotateAndTranslate, interpolateConfig, panHandlers } =\n    useAnimation({\n      onSwipe: (selectedIndex, direction) => {\n        const itemDefinition = data.find((i) => i.index === selectedIndex);\n        if (itemDefinition) {\n          props.onChange(itemDefinition.item, direction);\n        }\n      },\n    });\n\n  return (\n    <>\n      {data\n        .map((itemDefinition) => {\n          if (itemDefinition.index < currentIndex) {\n            return null;\n          }\n          if (itemDefinition.index === currentIndex) {\n            return (\n              <Animated.View\n                {...panHandlers}\n                key={itemDefinition.index}\n                style={[rotateAndTranslate]}>\n                {actionTagDetails?.enableTags && (\n                  <>\n                    <ActionTag direction=\"left\" opacity={interpolateConfig.nopeOpacity}>\n                      {actionTagDetails.labels?.left || 'NOPE'}\n                    </ActionTag>\n                    <ActionTag direction=\"right\" opacity={interpolateConfig.likeOpacity}>\n                      {actionTagDetails.labels?.right || 'LIKE'}\n                    </ActionTag>\n                    <ActionTag direction=\"top\" opacity={interpolateConfig.superLikeOpacity}>\n                      {actionTagDetails.labels?.top || 'SUPER LIKE'}\n                    </ActionTag>\n                  </>\n                )}\n                {itemDefinition.render(itemDefinition.item)}\n              </Animated.View>\n            );\n          }\n\n          return (\n            <Animated.View\n              key={itemDefinition.index}\n              style={{\n                opacity: interpolateX([1, 0, 1], position),\n                transform: [{ scale: interpolateX([1, 0.8, 1], position) }],\n              }}>\n              {itemDefinition.render(itemDefinition.item)}\n            </Animated.View>\n          );\n        })\n        .reverse()}\n    </>\n  );\n};\n"]}
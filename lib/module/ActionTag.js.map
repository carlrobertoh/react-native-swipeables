{"version":3,"sources":["ActionTag.tsx"],"names":["React","Animated","StyleSheet","Text","ActionTag","direction","props","color","styles","container","left","right","opacity","transform","rotate","box","borderColor","children","create","position","top","zIndex","borderWidth","fontSize","fontWeight","padding"],"mappings":"AAAA,OAAOA,KAAP,MAAyC,OAAzC;AAEA,SAASC,QAAT,EAAmBC,UAAnB,EAA+BC,IAA/B,QAA2C,cAA3C;AASA,OAAO,MAAMC,SAAS,GAAG,QAAuD;AAAA,MAAtD;AAAEC,IAAAA,SAAF;AAAa,OAAGC;AAAhB,GAAsD;;AAC9E,QAAMC,KAAK,GAAG,CAAC,MAAM;AACnB,QAAIF,SAAS,KAAK,MAAlB,EAA0B;AACxB,aAAO,KAAP;AACD;;AACD,QAAIA,SAAS,KAAK,KAAlB,EAAyB;AACvB,aAAO,MAAP;AACD;;AACD,WAAO,OAAP;AACD,GARa,GAAd;;AAUA,sBACE,oBAAC,QAAD,CAAU,IAAV;AACE,IAAA,KAAK,EAAE,EACL,GAAGG,MAAM,CAACC,SADL;AAEL,UAAIJ,SAAS,KAAK,OAAd,GAAwB;AAAEK,QAAAA,IAAI,EAAE;AAAR,OAAxB,GAAuC;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAA3C,CAFK;AAGLC,MAAAA,OAAO,EAAEN,KAAK,CAACM,OAHV;AAILC,MAAAA,SAAS,EAAE,CAAC;AAAEC,QAAAA,MAAM,EAAG,GAAET,SAAS,KAAK,OAAd,GAAwB,KAAxB,GAAgC,IAAK;AAAlD,OAAD;AAJN;AADT,kBAOE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE,EACL,GAAGG,MAAM,CAACO,GADL;AAELR,MAAAA,KAFK;AAGLS,MAAAA,WAAW,EAAET;AAHR;AADT,KAMGD,KAAK,CAACW,QANT,CAPF,CADF;AAkBD,CA7BM;AA+BP,MAAMT,MAAM,GAAGN,UAAU,CAACgB,MAAX,CAAkB;AAC/BT,EAAAA,SAAS,EAAE;AACTU,IAAAA,QAAQ,EAAE,UADD;AAETC,IAAAA,GAAG,EAAE,EAFI;AAGTC,IAAAA,MAAM,EAAE;AAHC,GADoB;AAM/BN,EAAAA,GAAG,EAAE;AACHO,IAAAA,WAAW,EAAE,CADV;AAEHC,IAAAA,QAAQ,EAAE,EAFP;AAGHC,IAAAA,UAAU,EAAE,KAHT;AAIHC,IAAAA,OAAO,EAAE;AAJN;AAN0B,CAAlB,CAAf","sourcesContent":["import React, { PropsWithChildren } from 'react';\n\nimport { Animated, StyleSheet, Text } from 'react-native';\n\nimport { Direction } from './types';\n\ninterface Props {\n  opacity: Animated.AnimatedInterpolation;\n  direction?: Direction;\n}\n\nexport const ActionTag = ({ direction, ...props }: PropsWithChildren<Props>) => {\n  const color = (() => {\n    if (direction === 'left') {\n      return 'red';\n    }\n    if (direction === 'top') {\n      return 'blue';\n    }\n    return 'green';\n  })();\n\n  return (\n    <Animated.View\n      style={{\n        ...styles.container,\n        ...(direction === 'right' ? { left: 40 } : { right: 40 }),\n        opacity: props.opacity,\n        transform: [{ rotate: `${direction === 'right' ? '-30' : '30'}deg` }],\n      }}>\n      <Text\n        style={{\n          ...styles.box,\n          color,\n          borderColor: color,\n        }}>\n        {props.children}\n      </Text>\n    </Animated.View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n    top: 50,\n    zIndex: 1000,\n  },\n  box: {\n    borderWidth: 1,\n    fontSize: 32,\n    fontWeight: '800',\n    padding: 10,\n  },\n});\n"]}